# ------------------------------------------------------------------
# Pipeline: Backend Function Deployment
# Description: Deploys the backend Azure Function app on pushes to main branch
# Triggers on changes in backend directory and pipeline YAML file
# ------------------------------------------------------------------

name: backend-function-deploy
trigger:
  branches:
    include:
    - main

  paths:
    include:
      - backend/**
      - azure-pipeline-function-deploy.yml

# Use local agent 
pool:
  name: 'Default'

jobs:
  - job: deploy_function
    displayName: Deploy Backend Function
    pool: 
      name: 'Default'

    steps:
      # Checkout repository source code
      - checkout: self
      # required Pythonfunc --version already installed on local agent
      # Azure Functions Core Tools are already installed on local agent func --version > 4.0.7512 
          
      # Mask secrets
      - powershell: |
          Write-Host "Masking secrets"
          Write-Host "##vso[task.setvariable variable=AZURE_SUBSCRIPTION_ID;issecret=true]$(AZURE_SUBSCRIPTION_ID)"
        displayName: 'Mask Secrets'

      # Install Syft
      - powershell: |
          Write-Host "Downloading and installing Syft..."
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/anchore/syft/main/install.sh" -OutFile "install_syft.sh"
          bash ./install_syft.sh -b "$(Agent.ToolsDirectory)/syft"
          $env:PATH += ";$(Agent.ToolsDirectory)/syft"
          syft --version
        displayName: 'Install Syft'

      # Generate SBOM
      - powershell: |
          Write-Host "Generating SBOM..."
          syft . -o json > sbom.json
        displayName: 'Generate SBOM'

      # Publish SBOM artifact
      - publish: sbom.json
        artifact: sbom
        displayName: 'Publish SBOM Artifact'

      # Install Grype
      - powershell: |
          Write-Host "Downloading and installing Grype..."
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/anchore/grype/main/install.sh" -OutFile "install_grype.sh"
          bash ./install_grype.sh -b "$(Agent.ToolsDirectory)/grype"
          $env:PATH += ";$(Agent.ToolsDirectory)/grype"
          grype --version
        displayName: 'Install Grype'

      # Scan vulnerabilities
      - powershell: |
          Write-Host "Scanning SBOM for vulnerabilities..."
          grype sbom:sbom.json --fail-on critical -o table
        displayName: 'Scan for Vulnerabilities with Grype'

      # Azure Login: In Azure DevOps, use AzureCLI@2 task for login instead of azure/login@v1 GitHub Action
      # use ps instead of bash as local agent is on windows
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'ubds-sp-connection'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          inlineScript: |
            Write-Host "Logged in to Azure CLI"

      # Install Python dependencies and deploy the Azure Function app
      - powershell: |
          pip install -r backend/requirements.txt
          cd backend # makes sure that function is published from the backend folder 
          func azure functionapp publish ubds-function-app --python
        displayName: 'Deploy Azure Function'

      # Test the deployed function endpoint to verify deployment
      - powershell: |
          Write-Host "Testing Function Deployment ðŸ§ª"
          Start-Sleep -Seconds 30
          $response = Invoke-RestMethod -Uri "https://ubds-function-app.azurewebsites.net/api/VisitorCounter?visitorId=test123"
          Write-Host "Response: $response"
        displayName: 'Test Azure Function'
 
      # Optional: List backend directory contents (for debugging)
      - powershell: |
          Write-Host "Backend directory contents:"
          Get-ChildItem -Path backend -Force
        displayName: 'List Backend Directory'
