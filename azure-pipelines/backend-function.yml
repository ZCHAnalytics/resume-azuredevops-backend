# ------------------------------------------------------------------
# Pipeline: Backend Function Deployment
# Description: Deploys the backend Azure Function app on pushes to main branch
# Triggers on changes in backend directory and pipeline YAML file
# ------------------------------------------------------------------

name: backend-function-deploy
trigger:
  branches:
    include:
    - main

  paths:
    include:
      - backend/iaac/**
      - azure-pipelines/backend-function.yml

# Use local agent 
pool:
  name: 'Default'

jobs:
  - job: deploy_function
    displayName: Deploy Backend Function
    pool: 
      name: 'Default'

    steps:
      # Checkout repository source code
      - checkout: self
      # required Python func --version already installed on local agent

      # --------------------------- SBOM + Grype Security Steps -----------------------------
      
      - task: PowerShell@2
        displayName: Generate SBOM
        inputs:
          targetType: inline
          workingDirectory: '$(Build.SourcesDirectory)'
          script: |
            $sbomPath = Join-Path -Path "$(Build.SourcesDirectory)\backend" -ChildPath "sbom.json"
            
            # Generate SBOM directly to file without encoding issues
            & syft frontend --output json=$sbomPath
            
            # Verify the file exists
            if (Test-Path $sbomPath) {
              Write-Output "sbom.json created successfully at: $sbomPath"
              
              # Display file size for verification
              $fileInfo = Get-Item $sbomPath
              Write-Output "File size: $($fileInfo.Length) bytes"
              
              # Optionally validate JSON format
              try {
                $jsonContent = Get-Content $sbomPath -Raw | ConvertFrom-Json
                Write-Output "JSON validation successful"
              } catch {
                Write-Error "JSON validation failed: $_"
              }
            } else {
              Write-Error "sbom.json NOT found at expected path."
              exit 1
            }

      - task: PowerShell@2
        displayName: Scan SBOM with Grype
        inputs:
          targetType: inline
          workingDirectory: '$(Build.SourcesDirectory)\backend'
          script: |
            # Run Grype scan on the SBOM
            Write-Output "Running Grype scan on SBOM..."
            
            grype sbom:sbom.json -o table --fail-on medium

      - task: PublishBuildArtifacts@1
        displayName: Upload SBOM Artifact
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)\backend\sbom.json'
          ArtifactName: 'sbom-backend'

      - task: PowerShell@2
        displayName: List files in backend folder after scanning
        inputs:
          targetType: inline
          script: |
            Write-Output "Listing files in backend folder:"
            Get-ChildItem "$(Build.SourcesDirectory)\backend" | Format-Table Name, Length, LastWriteTime
      # --- Security Scanning Steps End ---

      # Azure Functions Core Tools are already installed on local agent func --version > 4.0.7512 

      # Azure Login: In Azure DevOps, use AzureCLI@2 task for login instead of azure/login@v1 GitHub Action
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'ubds-sp-connection'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          inlineScript: |
            Write-Host "Logged in to Azure CLI"

      # Install Python dependencies and deploy the Azure Function app
      - powershell: |
          pip install -r backend/requirements.txt
          cd backend # makes sure that function is published from the backend folder 
          func azure functionapp publish ubds-func-app --python
        displayName: 'Deploy Azure Function'

      # Test the deployed function endpoint to verify deployment
      - powershell: |
          Write-Host "Testing Function Deployment"
          Start-Sleep -Seconds 30
          $response = Invoke-RestMethod -Uri "https://ubds-func-app.azurewebsites.net/api/VisitorCounter?visitorId=test123"
          Write-Host "Response: $response"
        displayName: 'Test Azure Function'
 
      # Optional: List backend directory contents (for debugging)
      - powershell: |
          Write-Host "Backend directory contents:"
          Get-ChildItem -Path backend -Force
        displayName: 'List Backend Directory'
